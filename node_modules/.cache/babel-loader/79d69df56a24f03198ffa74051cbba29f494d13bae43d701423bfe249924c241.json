{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARD BANK\\\\Documents\\\\ESHA FOLDER\\\\Hackathons\\\\Final Hackathon\\\\task-tracker\\\\src\\\\pages\\\\tasktracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../tracker.css';\nimport TaskCard from './Taskcard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasktracker = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [taskInput, setTaskInput] = useState(''); // New task title input\n  const [assignedPerson, setAssignedPerson] = useState(''); // Person assigned to task\n\n  // const people = ['Alice', 'Bob', 'Charlie'];\n\n  // Add a new task\n  const addTask = () => {\n    if (taskInput.trim() === '') return;\n    const newTask = {\n      id: Date.now(),\n      title: taskInput,\n      stage: 'To Do',\n      assignedTo: assignedPerson || 'Unassigned'\n    };\n    setTasks([...tasks, newTask]);\n    setTaskInput('');\n    setAssignedPerson('');\n  };\n\n  // Edit task title\n  const editTask = (taskId, newTitle) => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      title: newTitle\n    } : task));\n  };\n\n  // Assign person to task\n  const assignPerson = (taskId, person) => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      assignedTo: person\n    } : task));\n  };\n\n  // Move task to another stage\n  const moveTask = (taskId, newStage) => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      stage: newStage\n    } : task);\n    setTasks(updatedTasks);\n  };\n\n  // Delete a task\n  const deleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  // Group tasks by stage\n  const stages = ['To Do', 'In Progress', 'Done'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Tracker Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Your Tasks here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskInput,\n      onChange: e => setTaskInput(e.target.value) // New task input\n      ,\n      placeholder: \"Create Your Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: assignedPerson,\n      onChange: e => setAssignedPerson(e.target.value) // Update task title input\n      ,\n      placeholder: \"Whom To Assign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: stages.map(stage => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: stage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), tasks.filter(task => task.stage === stage).map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          task: task,\n          moveTask: moveTask,\n          deleteTask: deleteTask,\n          editTask: editTask,\n          assignPerson: assignPerson\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))]\n      }, stage, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasktracker, \"ATmG3u+lhaSeJ7ywK1zF/B3F4wM=\");\n_c = Tasktracker;\nexport default Tasktracker;\nvar _c;\n$RefreshReg$(_c, \"Tasktracker\");","map":{"version":3,"names":["React","useState","TaskCard","jsxDEV","_jsxDEV","Tasktracker","_s","tasks","setTasks","taskInput","setTaskInput","assignedPerson","setAssignedPerson","addTask","trim","newTask","id","Date","now","title","stage","assignedTo","editTask","taskId","newTitle","map","task","assignPerson","person","moveTask","newStage","updatedTasks","deleteTask","filter","stages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/pages/tasktracker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../tracker.css';\r\nimport TaskCard from './Taskcard'\r\n\r\nconst Tasktracker = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskInput, setTaskInput] = useState('');  // New task title input\r\n  const [assignedPerson, setAssignedPerson] = useState('');  // Person assigned to task\r\n\r\n  // const people = ['Alice', 'Bob', 'Charlie'];\r\n\r\n  // Add a new task\r\n  const addTask = () => {\r\n    if (taskInput.trim() === '') return;\r\n    const newTask = {\r\n      id: Date.now(),\r\n      title: taskInput,\r\n      stage: 'To Do',\r\n      assignedTo: assignedPerson || 'Unassigned',\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n    setTaskInput('');\r\n    setAssignedPerson('');\r\n  };\r\n\r\n  // Edit task title\r\n  const editTask = (taskId, newTitle) => {\r\n    setTasks(tasks.map(task => \r\n      task.id === taskId ? { ...task, title: newTitle } : task\r\n    ));\r\n  };\r\n\r\n  // Assign person to task\r\n  const assignPerson = (taskId, person) => {\r\n    setTasks(tasks.map(task => \r\n      task.id === taskId ? { ...task, assignedTo: person } : task\r\n    ));\r\n  };\r\n\r\n  // Move task to another stage\r\n  const moveTask = (taskId, newStage) => {\r\n    const updatedTasks = tasks.map(task =>\r\n      task.id === taskId ? { ...task, stage: newStage } : task\r\n    );\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  // Delete a task\r\n  const deleteTask = (taskId) => {\r\n    setTasks(tasks.filter(task => task.id !== taskId));\r\n  };\r\n\r\n  // Group tasks by stage\r\n  const stages = ['To Do', 'In Progress', 'Done'];\r\n\r\n  return (\r\n    <div className=\"tracker\">\r\n      <h1>Task Tracker Manager</h1>\r\n      <h2>Create Your Tasks here</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={taskInput}\r\n        onChange={(e) => setTaskInput(e.target.value)}  // New task input\r\n        placeholder=\"Create Your Task\"\r\n      />\r\n      {/* <select\r\n        value={assignedPerson}\r\n        onChange={(e) => setAssignedPerson(e.target.value)}  // Assign person to task\r\n      >\r\n        <option value=\"\">Assign to...</option>\r\n        {people.map(person => (\r\n          <option key={person} value={person}>{person}</option>\r\n        ))}\r\n      </select> */}\r\n      <input\r\n        type=\"text\"\r\n        value={assignedPerson}\r\n        onChange={(e) => setAssignedPerson(e.target.value)}  // Update task title input\r\n        placeholder=\"Whom To Assign\"\r\n      />\r\n      <button onClick={addTask}>Create Task</button>\r\n\r\n      <div className=\"board\">\r\n        {stages.map(stage => (\r\n          <div key={stage} className=\"stage\">\r\n            <h2>{stage}</h2>\r\n            {tasks.filter(task => task.stage === stage).map(task => (\r\n              <TaskCard\r\n                key={task.id}\r\n                task={task}\r\n                moveTask={moveTask}\r\n                deleteTask={deleteTask}\r\n                editTask={editTask}\r\n                assignPerson={assignPerson}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasktracker\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
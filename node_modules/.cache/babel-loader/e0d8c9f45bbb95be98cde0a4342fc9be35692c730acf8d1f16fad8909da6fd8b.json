{"ast":null,"code":"// import React, { useState } from \"react\";\n\n// function TaskCard({ task, onEdit, onDelete, onMove }) {\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [title, setTitle] = useState(task.title);\n//   const [assignedTo, setAssignedTo] = useState(task.assignedTo);\n\n//   const saveEdit = () => {\n//     onEdit(task.id, title, assignedTo);\n//     setIsEditing(false);\n//   };\n\n//   return (\n//     <div className=\"task-card\">\n//       {isEditing ? (\n//         <>\n//           <input value={title} onChange={e => setTitle(e.target.value)} />\n//           <input value={assignedTo} onChange={e => setAssignedTo(e.target.value)} />\n//           <button onClick={saveEdit}>Save</button>\n//         </>\n//       ) : (\n//         <>\n//           <h4>{task.title}</h4>\n//           <p>Assigned to: {task.assignedTo || \"Unassigned\"}</p>\n//           <div className=\"actions\">\n//             <button onClick={() => setIsEditing(true)}>Edit</button>\n//             <button onClick={() => onDelete(task.id)}>Delete</button>\n//             <button onClick={() => onMove(task.id, -1)}>←</button>\n//             <button onClick={() => onMove(task.id, 1)}>→</button>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default TaskCard;","map":{"version":3,"names":[],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/Taskcard.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// function TaskCard({ task, onEdit, onDelete, onMove }) {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [title, setTitle] = useState(task.title);\r\n//   const [assignedTo, setAssignedTo] = useState(task.assignedTo);\r\n\r\n//   const saveEdit = () => {\r\n//     onEdit(task.id, title, assignedTo);\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"task-card\">\r\n//       {isEditing ? (\r\n//         <>\r\n//           <input value={title} onChange={e => setTitle(e.target.value)} />\r\n//           <input value={assignedTo} onChange={e => setAssignedTo(e.target.value)} />\r\n//           <button onClick={saveEdit}>Save</button>\r\n//         </>\r\n//       ) : (\r\n//         <>\r\n//           <h4>{task.title}</h4>\r\n//           <p>Assigned to: {task.assignedTo || \"Unassigned\"}</p>\r\n//           <div className=\"actions\">\r\n//             <button onClick={() => setIsEditing(true)}>Edit</button>\r\n//             <button onClick={() => onDelete(task.id)}>Delete</button>\r\n//             <button onClick={() => onMove(task.id, -1)}>←</button>\r\n//             <button onClick={() => onMove(task.id, 1)}>→</button>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TaskCard;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
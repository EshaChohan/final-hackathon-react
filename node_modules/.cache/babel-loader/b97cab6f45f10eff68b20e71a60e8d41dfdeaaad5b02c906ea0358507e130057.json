{"ast":null,"code":"// import React, { useState } from \"react\";\n\n// function TaskCard({ task, onEdit, onDelete, onMove }) {\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [title, setTitle] = useState(task.title);\n//   const [assignedTo, setAssignedTo] = useState(task.assignedTo);\n\n//   const saveEdit = () => {\n//     onEdit(task.id, title, assignedTo);\n//     setIsEditing(false);\n//   };\n\n//   return (\n//     <div className=\"task-card\">\n//       {isEditing ? (\n//         <>\n//           <input value={title} onChange={e => setTitle(e.target.value)} />\n//           <input value={assignedTo} onChange={e => setAssignedTo(e.target.value)} />\n//           <button onClick={saveEdit}>Save</button>\n//         </>\n//       ) : (\n//         <>\n//           <h4>{task.title}</h4>\n//           <p>Assigned to: {task.assignedTo || \"Unassigned\"}</p>\n//           <div className=\"actions\">\n//             <button onClick={() => setIsEditing(true)}>Edit</button>\n//             <button onClick={() => onDelete(task.id)}>Delete</button>\n//             <button onClick={() => onMove(task.id, -1)}>←</button>\n//             <button onClick={() => onMove(task.id, 1)}>→</button>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default TaskCard;\n\n// SOCOND CODE\n\n// import React, { useState } from 'react';\n\n// const TaskCard = ({ task, moveTask, deleteTask, editTask, assignPerson }) => {\n//   const [editing, setEditing] = useState(false);\n//   const [newTitle, setNewTitle] = useState(task.title);\n\n//   // Handle title edit\n//   const handleEditTitle = () => {\n//     editTask(task.id, newTitle);\n//     setEditing(false);  // Close edit mode\n//   };\n\n//   return (\n//     <div className=\"task-card\">\n//       <div>\n//         {/* If editing, show input box; otherwise, show task title */}\n//         {editing ? (\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={newTitle}\n//               onChange={(e) => setNewTitle(e.target.value)}  // Handle title change\n//             />\n//             <button onClick={handleEditTitle}>Save</button>\n//           </div>\n//         ) : (\n//           <h3 onClick={() => setEditing(true)}>{task.title}</h3>\n//         )}\n//       </div>\n\n//       <div>\n//         <strong>Assigned to: </strong>\n//         <span>{task.assignedTo}</span>\n//         {/* Dropdown to assign person */}\n//         {/* <select \n//           onChange={(e) => assignPerson(task.id, e.target.value)} \n//           value={task.assignedTo}\n//         >\n//           <option value=\"Unassigned\">Unassigned</option>\n//           <option value=\"Alice\">Alice</option>\n//           <option value=\"Bob\">Bob</option>\n//           <option value=\"Charlie\">Charlie</option>\n//         </select> */}\n//       </div>\n\n//       <div className=\"task-actions\">\n//         {/* Move task buttons */}\n//         {task.stage !== 'To Do' && <button onClick={() => moveTask(task.id, 'To Do')}>To Do</button>}\n//         {task.stage !== 'In Progress' && <button onClick={() => moveTask(task.id, 'In Progress')}>In Progress</button>}\n//         {task.stage !== 'Done' && <button onClick={() => moveTask(task.id, 'Done')}>Done</button>}\n\n//         {/* Delete task */}\n//         <button onClick={() => deleteTask(task.id)}>Delete</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TaskCard;\n\n// THIRD CODE \n\n// import React, { useState } from 'react';\n\n// const TaskCard = ({ task, moveTask, deleteTask, editTask, assignPerson }) => {\n//   const [isEditing, setIsEditing] = useState(false);  // Track if the task is being edited\n//   const [newTitle, setNewTitle] = useState(task.title);  // Input value for the new task title\n//    const [assignedPerson, setAssignedPerson] = useState('');  // Person assigned to task\n\n//   // Handle editing task title\n//   const handleEditTitle = () => {\n//     if (newTitle.trim()) {\n//       editTask(task.id, newTitle);  // Save the new title\n//       setIsEditing(false);  // Exit edit mode\n//     }\n//   };\n\n//   return (\n//     <div className=\"task-card\">\n//       <div>\n//         {/* If editing, show input; otherwise, show task title */}\n//         {isEditing? (\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={newTitle}\n//               onChange={(e) => setNewTitle(e.target.value)}  // Update title while editing\n//             />\n//              <input\n//         type=\"text\"\n//         value={assignedPerson}\n//         onChange={(e) => setAssignedPerson(e.target.value)}  // Update task title input\n//         placeholder=\"assigned...\"\n//       />\n//             <button onClick={handleEditTitle}>Save</button>\n//           </div>\n//         ) \n//         : (\n//           <h3>{task.title}</h3>  // Click to edit\n\n//         )\n// }\n\n//       </div>\n\n//       <div>\n//         <strong>Assigned to: </strong>\n//         <span>{task.assignedTo}</span>\n//         {/* Dropdown to assign person\n//         <select \n//           onChange={(e) => assignPerson(task.id, e.target.value)} \n//           value={task.assignedTo}\n//         >\n//           <option value=\"Unassigned\">Unassigned</option>\n//           <option value=\"Alice\">Alice</option>\n//           <option value=\"Bob\">Bob</option>\n//           <option value=\"Charlie\">Charlie</option>\n//         </select> */}\n//       </div>\n\n//       <div className=\"task-actions\">\n//         {/* Move task buttons */}\n//         {task.stage !== 'To Do' && <button onClick={() => moveTask(task.id, 'To Do')}>To Do</button>}\n//         {task.stage !== 'In Progress' && <button onClick={() => moveTask(task.id, 'In Progress')}>In Progress</button>}\n//         {task.stage !== 'Done' && <button onClick={() => moveTask(task.id, 'Done')}>Done</button>}\n\n//         {/* Delete task */}\n//         <button onClick={() => deleteTask(task.id)}>Delete</button>\n//         <button onClick={() => setIsEditing(true)}>Edit</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TaskCard;\n\n// FOURTH CODE\n// import React, { useState, useEffect } from 'react';\n\n// const TaskCard = ({ task, moveTask, deleteTask, editTask, assignPerson }) => {\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [editedTitle, setEditedTitle] = useState(task.title);\n//   const [editedPerson, setEditedPerson] = useState(task.assignedTo);\n\n//   // Sync local state with props when entering edit mode\n// //   useEffect(() => {\n// //     if (isEditing) {\n// //       setEditedTitle(task.title);\n// //       setEditedPerson(task.assignedTo);\n// //     }\n// //   }, [isEditing, task.title, task.assignedTo]);\n// useEffect(() => {\n//     if (isEditing) {\n//       setEditedTitle(task.title);\n//       setEditedPerson(task.assignedTo);\n//     }\n//     // Only run when edit mode is toggled\n//   }, [isEditing]);\n\n//   const handleSave = () => {\n//     if (editedTitle.trim()) {\n//       editTask(task.id, editedTitle);\n//       assignPerson(task.id, editedPerson);\n//       setIsEditing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"task-card\">\n//       {isEditing ? (\n//         <>\n//           <input\n//             type=\"text\"\n//             value={editedTitle}\n//             onChange={(e) => setEditedTitle(e.target.value)}\n//             placeholder=\"Edit task title\"\n//           />\n//           <input\n//         type=\"text\"\n//         value={editedPerson}\n//         onChange={(e) => setEditedPerson(e.target.value)}  // Update task title input\n//         placeholder=\"assigned...\"\n//       />\n//           {/* <select\n//             value={editedPerson}\n//             onChange={(e) => setEditedPerson(e.target.value)}\n//           >\n//             <option value=\"Unassigned\">Unassigned</option>\n//             <option value=\"Alice\">Alice</option>\n//             <option value=\"Bob\">Bob</option>\n//             <option value=\"Charlie\">Charlie</option>\n//           </select> */}\n//           <button onClick={handleSave}>Save</button>\n//           <button onClick={() => setIsEditing(false)}>Cancel</button>\n//         </>\n//       ) : (\n//         <>\n//           <h3>{task.title}</h3>\n//           <p><strong>Assigned to:</strong> {task.assignedTo}</p>\n//         </>\n//       )}\n\n//       <div className=\"task-actions\">\n//         {task.stage !== 'To Do' && <button onClick={() => moveTask(task.id, 'To Do')}>To Do</button>}\n//         {task.stage !== 'In Progress' && <button onClick={() => moveTask(task.id, 'In Progress')}>In Progress</button>}\n//         {task.stage !== 'Done' && <button onClick={() => moveTask(task.id, 'Done')}>Done</button>}\n//         <button onClick={() => deleteTask(task.id)}>Delete</button>\n//         <button onClick={() => setIsEditing(true)}>Edit</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TaskCard;\n\n//","map":{"version":3,"names":[],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/Taskcard.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// function TaskCard({ task, onEdit, onDelete, onMove }) {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [title, setTitle] = useState(task.title);\r\n//   const [assignedTo, setAssignedTo] = useState(task.assignedTo);\r\n\r\n//   const saveEdit = () => {\r\n//     onEdit(task.id, title, assignedTo);\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"task-card\">\r\n//       {isEditing ? (\r\n//         <>\r\n//           <input value={title} onChange={e => setTitle(e.target.value)} />\r\n//           <input value={assignedTo} onChange={e => setAssignedTo(e.target.value)} />\r\n//           <button onClick={saveEdit}>Save</button>\r\n//         </>\r\n//       ) : (\r\n//         <>\r\n//           <h4>{task.title}</h4>\r\n//           <p>Assigned to: {task.assignedTo || \"Unassigned\"}</p>\r\n//           <div className=\"actions\">\r\n//             <button onClick={() => setIsEditing(true)}>Edit</button>\r\n//             <button onClick={() => onDelete(task.id)}>Delete</button>\r\n//             <button onClick={() => onMove(task.id, -1)}>←</button>\r\n//             <button onClick={() => onMove(task.id, 1)}>→</button>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TaskCard;\r\n\r\n  // SOCOND CODE\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const TaskCard = ({ task, moveTask, deleteTask, editTask, assignPerson }) => {\r\n//   const [editing, setEditing] = useState(false);\r\n//   const [newTitle, setNewTitle] = useState(task.title);\r\n\r\n//   // Handle title edit\r\n//   const handleEditTitle = () => {\r\n//     editTask(task.id, newTitle);\r\n//     setEditing(false);  // Close edit mode\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"task-card\">\r\n//       <div>\r\n//         {/* If editing, show input box; otherwise, show task title */}\r\n//         {editing ? (\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={newTitle}\r\n//               onChange={(e) => setNewTitle(e.target.value)}  // Handle title change\r\n//             />\r\n//             <button onClick={handleEditTitle}>Save</button>\r\n//           </div>\r\n//         ) : (\r\n//           <h3 onClick={() => setEditing(true)}>{task.title}</h3>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <strong>Assigned to: </strong>\r\n//         <span>{task.assignedTo}</span>\r\n//         {/* Dropdown to assign person */}\r\n//         {/* <select \r\n//           onChange={(e) => assignPerson(task.id, e.target.value)} \r\n//           value={task.assignedTo}\r\n//         >\r\n//           <option value=\"Unassigned\">Unassigned</option>\r\n//           <option value=\"Alice\">Alice</option>\r\n//           <option value=\"Bob\">Bob</option>\r\n//           <option value=\"Charlie\">Charlie</option>\r\n//         </select> */}\r\n//       </div>\r\n\r\n//       <div className=\"task-actions\">\r\n//         {/* Move task buttons */}\r\n//         {task.stage !== 'To Do' && <button onClick={() => moveTask(task.id, 'To Do')}>To Do</button>}\r\n//         {task.stage !== 'In Progress' && <button onClick={() => moveTask(task.id, 'In Progress')}>In Progress</button>}\r\n//         {task.stage !== 'Done' && <button onClick={() => moveTask(task.id, 'Done')}>Done</button>}\r\n\r\n//         {/* Delete task */}\r\n//         <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TaskCard;\r\n\r\n// THIRD CODE \r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const TaskCard = ({ task, moveTask, deleteTask, editTask, assignPerson }) => {\r\n//   const [isEditing, setIsEditing] = useState(false);  // Track if the task is being edited\r\n//   const [newTitle, setNewTitle] = useState(task.title);  // Input value for the new task title\r\n//    const [assignedPerson, setAssignedPerson] = useState('');  // Person assigned to task\r\n\r\n//   // Handle editing task title\r\n//   const handleEditTitle = () => {\r\n//     if (newTitle.trim()) {\r\n//       editTask(task.id, newTitle);  // Save the new title\r\n//       setIsEditing(false);  // Exit edit mode\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"task-card\">\r\n//       <div>\r\n//         {/* If editing, show input; otherwise, show task title */}\r\n//         {isEditing? (\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={newTitle}\r\n//               onChange={(e) => setNewTitle(e.target.value)}  // Update title while editing\r\n//             />\r\n//              <input\r\n//         type=\"text\"\r\n//         value={assignedPerson}\r\n//         onChange={(e) => setAssignedPerson(e.target.value)}  // Update task title input\r\n//         placeholder=\"assigned...\"\r\n//       />\r\n//             <button onClick={handleEditTitle}>Save</button>\r\n//           </div>\r\n//         ) \r\n//         : (\r\n//           <h3>{task.title}</h3>  // Click to edit\r\n        \r\n//         )\r\n// }\r\n\r\n        \r\n//       </div>\r\n\r\n//       <div>\r\n//         <strong>Assigned to: </strong>\r\n//         <span>{task.assignedTo}</span>\r\n//         {/* Dropdown to assign person\r\n//         <select \r\n//           onChange={(e) => assignPerson(task.id, e.target.value)} \r\n//           value={task.assignedTo}\r\n//         >\r\n//           <option value=\"Unassigned\">Unassigned</option>\r\n//           <option value=\"Alice\">Alice</option>\r\n//           <option value=\"Bob\">Bob</option>\r\n//           <option value=\"Charlie\">Charlie</option>\r\n//         </select> */}\r\n//       </div>\r\n\r\n//       <div className=\"task-actions\">\r\n//         {/* Move task buttons */}\r\n//         {task.stage !== 'To Do' && <button onClick={() => moveTask(task.id, 'To Do')}>To Do</button>}\r\n//         {task.stage !== 'In Progress' && <button onClick={() => moveTask(task.id, 'In Progress')}>In Progress</button>}\r\n//         {task.stage !== 'Done' && <button onClick={() => moveTask(task.id, 'Done')}>Done</button>}\r\n\r\n//         {/* Delete task */}\r\n//         <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n//         <button onClick={() => setIsEditing(true)}>Edit</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TaskCard;\r\n\r\n// FOURTH CODE\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const TaskCard = ({ task, moveTask, deleteTask, editTask, assignPerson }) => {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [editedTitle, setEditedTitle] = useState(task.title);\r\n//   const [editedPerson, setEditedPerson] = useState(task.assignedTo);\r\n\r\n//   // Sync local state with props when entering edit mode\r\n// //   useEffect(() => {\r\n// //     if (isEditing) {\r\n// //       setEditedTitle(task.title);\r\n// //       setEditedPerson(task.assignedTo);\r\n// //     }\r\n// //   }, [isEditing, task.title, task.assignedTo]);\r\n// useEffect(() => {\r\n//     if (isEditing) {\r\n//       setEditedTitle(task.title);\r\n//       setEditedPerson(task.assignedTo);\r\n//     }\r\n//     // Only run when edit mode is toggled\r\n//   }, [isEditing]);\r\n\r\n//   const handleSave = () => {\r\n//     if (editedTitle.trim()) {\r\n//       editTask(task.id, editedTitle);\r\n//       assignPerson(task.id, editedPerson);\r\n//       setIsEditing(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"task-card\">\r\n//       {isEditing ? (\r\n//         <>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={editedTitle}\r\n//             onChange={(e) => setEditedTitle(e.target.value)}\r\n//             placeholder=\"Edit task title\"\r\n//           />\r\n//           <input\r\n//         type=\"text\"\r\n//         value={editedPerson}\r\n//         onChange={(e) => setEditedPerson(e.target.value)}  // Update task title input\r\n//         placeholder=\"assigned...\"\r\n//       />\r\n//           {/* <select\r\n//             value={editedPerson}\r\n//             onChange={(e) => setEditedPerson(e.target.value)}\r\n//           >\r\n//             <option value=\"Unassigned\">Unassigned</option>\r\n//             <option value=\"Alice\">Alice</option>\r\n//             <option value=\"Bob\">Bob</option>\r\n//             <option value=\"Charlie\">Charlie</option>\r\n//           </select> */}\r\n//           <button onClick={handleSave}>Save</button>\r\n//           <button onClick={() => setIsEditing(false)}>Cancel</button>\r\n//         </>\r\n//       ) : (\r\n//         <>\r\n//           <h3>{task.title}</h3>\r\n//           <p><strong>Assigned to:</strong> {task.assignedTo}</p>\r\n//         </>\r\n//       )}\r\n\r\n//       <div className=\"task-actions\">\r\n//         {task.stage !== 'To Do' && <button onClick={() => moveTask(task.id, 'To Do')}>To Do</button>}\r\n//         {task.stage !== 'In Progress' && <button onClick={() => moveTask(task.id, 'In Progress')}>In Progress</button>}\r\n//         {task.stage !== 'Done' && <button onClick={() => moveTask(task.id, 'Done')}>Done</button>}\r\n//         <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n//         <button onClick={() => setIsEditing(true)}>Edit</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TaskCard;\r\n\r\n\r\n// "],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEE;;AAEF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARD BANK\\\\Documents\\\\ESHA FOLDER\\\\Hackathons\\\\Final Hackathon\\\\task-tracker\\\\src\\\\Taskcard.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// function TaskCard({ task, onEdit, onDelete, onMove }) {\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [title, setTitle] = useState(task.title);\n//   const [assignedTo, setAssignedTo] = useState(task.assignedTo);\n\n//   const saveEdit = () => {\n//     onEdit(task.id, title, assignedTo);\n//     setIsEditing(false);\n//   };\n\n//   return (\n//     <div className=\"task-card\">\n//       {isEditing ? (\n//         <>\n//           <input value={title} onChange={e => setTitle(e.target.value)} />\n//           <input value={assignedTo} onChange={e => setAssignedTo(e.target.value)} />\n//           <button onClick={saveEdit}>Save</button>\n//         </>\n//       ) : (\n//         <>\n//           <h4>{task.title}</h4>\n//           <p>Assigned to: {task.assignedTo || \"Unassigned\"}</p>\n//           <div className=\"actions\">\n//             <button onClick={() => setIsEditing(true)}>Edit</button>\n//             <button onClick={() => onDelete(task.id)}>Delete</button>\n//             <button onClick={() => onMove(task.id, -1)}>←</button>\n//             <button onClick={() => onMove(task.id, 1)}>→</button>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default TaskCard;\n\n// SOCOND CODE\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  task,\n  moveTask,\n  deleteTask,\n  editTask,\n  assignPerson\n}) => {\n  _s();\n  const [editing, setEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(task.title);\n\n  // Handle title edit\n  const handleEditTitle = () => {\n    editTask(task.id, newTitle);\n    setEditing(false); // Close edit mode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTitle,\n          onChange: e => setNewTitle(e.target.value) // Handle title change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditTitle,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => setEditing(true),\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Assigned to: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: task.assignedTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-actions\",\n      children: [task.stage !== 'To Do' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => moveTask(task.id, 'To Do'),\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 36\n      }, this), task.stage !== 'In Progress' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => moveTask(task.id, 'In Progress'),\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 42\n      }, this), task.stage !== 'Done' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => moveTask(task.id, 'Done'),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"EAkeqhvWplkFFJIhQWL3SqbfE00=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskCard","task","moveTask","deleteTask","editTask","assignPerson","_s","editing","setEditing","newTitle","setNewTitle","title","handleEditTitle","id","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","assignedTo","stage","_c","$RefreshReg$"],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/Taskcard.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// function TaskCard({ task, onEdit, onDelete, onMove }) {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [title, setTitle] = useState(task.title);\r\n//   const [assignedTo, setAssignedTo] = useState(task.assignedTo);\r\n\r\n//   const saveEdit = () => {\r\n//     onEdit(task.id, title, assignedTo);\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"task-card\">\r\n//       {isEditing ? (\r\n//         <>\r\n//           <input value={title} onChange={e => setTitle(e.target.value)} />\r\n//           <input value={assignedTo} onChange={e => setAssignedTo(e.target.value)} />\r\n//           <button onClick={saveEdit}>Save</button>\r\n//         </>\r\n//       ) : (\r\n//         <>\r\n//           <h4>{task.title}</h4>\r\n//           <p>Assigned to: {task.assignedTo || \"Unassigned\"}</p>\r\n//           <div className=\"actions\">\r\n//             <button onClick={() => setIsEditing(true)}>Edit</button>\r\n//             <button onClick={() => onDelete(task.id)}>Delete</button>\r\n//             <button onClick={() => onMove(task.id, -1)}>←</button>\r\n//             <button onClick={() => onMove(task.id, 1)}>→</button>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TaskCard;\r\n\r\n  // SOCOND CODE\r\n  \r\nimport React, { useState } from 'react';\r\n\r\nconst TaskCard = ({ task, moveTask, deleteTask, editTask, assignPerson }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTitle, setNewTitle] = useState(task.title);\r\n\r\n  // Handle title edit\r\n  const handleEditTitle = () => {\r\n    editTask(task.id, newTitle);\r\n    setEditing(false);  // Close edit mode\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-card\">\r\n      <div>\r\n        {/* If editing, show input box; otherwise, show task title */}\r\n        {editing ? (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={newTitle}\r\n              onChange={(e) => setNewTitle(e.target.value)}  // Handle title change\r\n            />\r\n            <button onClick={handleEditTitle}>Save</button>\r\n          </div>\r\n        ) : (\r\n          <h3 onClick={() => setEditing(true)}>{task.title}</h3>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <strong>Assigned to: </strong>\r\n        <span>{task.assignedTo}</span>\r\n        {/* Dropdown to assign person */}\r\n        {/* <select \r\n          onChange={(e) => assignPerson(task.id, e.target.value)} \r\n          value={task.assignedTo}\r\n        >\r\n          <option value=\"Unassigned\">Unassigned</option>\r\n          <option value=\"Alice\">Alice</option>\r\n          <option value=\"Bob\">Bob</option>\r\n          <option value=\"Charlie\">Charlie</option>\r\n        </select> */}\r\n      </div>\r\n\r\n      <div className=\"task-actions\">\r\n        {/* Move task buttons */}\r\n        {task.stage !== 'To Do' && <button onClick={() => moveTask(task.id, 'To Do')}>To Do</button>}\r\n        {task.stage !== 'In Progress' && <button onClick={() => moveTask(task.id, 'In Progress')}>In Progress</button>}\r\n        {task.stage !== 'Done' && <button onClick={() => moveTask(task.id, 'Done')}>Done</button>}\r\n\r\n        {/* Delete task */}\r\n        <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
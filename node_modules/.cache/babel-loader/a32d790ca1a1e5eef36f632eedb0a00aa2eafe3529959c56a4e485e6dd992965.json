{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARD BANK\\\\Documents\\\\ESHA FOLDER\\\\Hackathons\\\\Final Hackathon\\\\task-tracker\\\\src\\\\Column.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskCard from \"./Taskcard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Column({\n  stage,\n  tasks,\n  onAdd,\n  onEdit,\n  onDelete,\n  onMove\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [assignedTo, setAssignedTo] = useState(\"\");\n  const handleAdd = () => {\n    if (title.trim()) {\n      onAdd(title, assignedTo);\n      setTitle(\"\");\n      setAssignedTo(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: stage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n      task: task,\n      onEdit: onEdit,\n      onDelete: onDelete,\n      onMove: onMove\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)), stage === \"To Do\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Assign to\",\n        value: assignedTo,\n        onChange: e => setAssignedTo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Column, \"9RvyRfD/eXYVUCxebJrj4orGVDs=\");\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useState","TaskCard","jsxDEV","_jsxDEV","Column","stage","tasks","onAdd","onEdit","onDelete","onMove","_s","title","setTitle","assignedTo","setAssignedTo","handleAdd","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/Column.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TaskCard from \"./Taskcard\";\r\n\r\nfunction Column({ stage, tasks, onAdd, onEdit, onDelete, onMove }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [assignedTo, setAssignedTo] = useState(\"\");\r\n\r\n  const handleAdd = () => {\r\n    if (title.trim()) {\r\n      onAdd(title, assignedTo);\r\n      setTitle(\"\");\r\n      setAssignedTo(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"column\">\r\n      <h2>{stage}</h2>\r\n      {tasks.map(task => (\r\n        <TaskCard\r\n          key={task.id}\r\n          task={task}\r\n          onEdit={onEdit}\r\n          onDelete={onDelete}\r\n          onMove={onMove}\r\n        />\r\n      ))}\r\n      {stage === \"To Do\" && (\r\n        <div className=\"new-task\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task title\"\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Assign to\"\r\n            value={assignedTo}\r\n            onChange={e => setAssignedTo(e.target.value)}\r\n          />\r\n          <button onClick={handleAdd}>Add Task</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Column;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,MAAMA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,KAAK;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACjE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMgB,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIJ,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE;MAChBV,KAAK,CAACK,KAAK,EAAEE,UAAU,CAAC;MACxBD,QAAQ,CAAC,EAAE,CAAC;MACZE,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBhB,OAAA;MAAAgB,QAAA,EAAKd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACfjB,KAAK,CAACkB,GAAG,CAACC,IAAI,iBACbtB,OAAA,CAACF,QAAQ;MAEPwB,IAAI,EAAEA,IAAK;MACXjB,MAAM,EAAEA,MAAO;MACfC,QAAQ,EAAEA,QAAS;MACnBC,MAAM,EAAEA;IAAO,GAJVe,IAAI,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CACF,CAAC,EACDlB,KAAK,KAAK,OAAO,iBAChBF,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBhB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBC,KAAK,EAAEjB,KAAM;QACbkB,QAAQ,EAAEC,CAAC,IAAIlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFpB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAEf,UAAW;QAClBgB,QAAQ,EAAEC,CAAC,IAAIhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFpB,OAAA;QAAQ8B,OAAO,EAAEjB,SAAU;QAAAG,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACZ,EAAA,CA3CQP,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AA6Cf,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
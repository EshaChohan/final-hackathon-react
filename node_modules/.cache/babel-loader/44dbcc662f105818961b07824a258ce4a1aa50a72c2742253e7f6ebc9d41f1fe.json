{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARD BANK\\\\Documents\\\\ESHA FOLDER\\\\Hackathons\\\\Final Hackathon\\\\task-tracker\\\\src\\\\pages\\\\Taskcard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../tracker.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  task,\n  moveTask,\n  deleteTask,\n  editTask,\n  assignPerson\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(task.title);\n  const [editedPerson, setEditedPerson] = useState(task.assignedTo);\n  // Fix: only run once when editing starts\n  useEffect(() => {\n    if (isEditing) {\n      setEditedTitle(task.title);\n      setEditedPerson(task.assignedTo);\n    }\n  }, [isEditing]);\n  const handleSave = () => {\n    if (editedTitle.trim()) {\n      editTask(task.id, editedTitle);\n      assignPerson(task.id, editedPerson);\n      setIsEditing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-card\",\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedTitle,\n        onChange: e => setEditedTitle(e.target.value),\n        placeholder: \"Edit Your Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedPerson,\n        onChange: e => setEditedPerson(e.target.value),\n        placeholder: \"Edit Assigner Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Task: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: '100'\n          },\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Assigned to:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: '100'\n          },\n          children: task.assignedTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-actions\",\n      children: [task.stage !== 'To Do' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => moveTask(task.id, 'To Do'),\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }, this), task.stage !== 'In Progress' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => moveTask(task.id, 'In Progress'),\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 42\n      }, this), task.stage !== 'Done' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => moveTask(task.id, 'Done'),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"NILh4qtBlgmA39c9B0bHveIwzyg=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskCard","task","moveTask","deleteTask","editTask","assignPerson","_s","isEditing","setIsEditing","editedTitle","setEditedTitle","title","editedPerson","setEditedPerson","assignedTo","handleSave","trim","id","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","fontWeight","stage","_c","$RefreshReg$"],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/pages/Taskcard.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../tracker.css';\r\nconst TaskCard = ({ task, moveTask, deleteTask, editTask, assignPerson }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedTitle, setEditedTitle] = useState(task.title);\r\n  const [editedPerson, setEditedPerson] = useState(task.assignedTo);\r\n  // Fix: only run once when editing starts\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      setEditedTitle(task.title);\r\n      setEditedPerson(task.assignedTo);\r\n    }\r\n  }, [isEditing]);\r\n\r\n  const handleSave = () => {\r\n    if (editedTitle.trim()) {\r\n      editTask(task.id, editedTitle);\r\n      assignPerson(task.id, editedPerson);\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-card\">\r\n      {isEditing ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            value={editedTitle}\r\n            onChange={(e) => setEditedTitle(e.target.value)}\r\n            placeholder=\"Edit Your Task\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editedPerson}\r\n            onChange={(e) => setEditedPerson(e.target.value)}\r\n            placeholder=\"Edit Assigner Name\"\r\n          />\r\n          <button onClick={handleSave}>Save</button>\r\n          <button onClick={() => setIsEditing(false)}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Task: <span style={{fontWeight:'100'}}>{task.title}</span></h2>\r\n          <h2>Assigned to:<span style={{fontWeight:'100'}}>{task.assignedTo}</span></h2>\r\n        </>\r\n      )}\r\n\r\n      <div className=\"task-actions\">\r\n        {task.stage !== 'To Do' && <button onClick={() => moveTask(task.id, 'To Do')}>To Do</button>}\r\n        {task.stage !== 'In Progress' && <button onClick={() => moveTask(task.id, 'In Progress')}>In Progress</button>}\r\n        {task.stage !== 'Done' && <button onClick={() => moveTask(task.id, 'Done')}>Done</button>}\r\n        <br/>\r\n        <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n        <button onClick={() => setIsEditing(true)}>Edit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
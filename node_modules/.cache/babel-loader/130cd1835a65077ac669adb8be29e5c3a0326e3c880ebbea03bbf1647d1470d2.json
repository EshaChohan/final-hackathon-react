{"ast":null,"code":"// import React, { useState } from \"react\";\n// import Column from \"./Column\";\n\n// const initialTasks = [];\n\n// const stages = [\"To Do\", \"In Progress\", \"Done\"];\n\n// function TaskBoard() {\n//   const [tasks, setTasks] = useState(initialTasks);\n\n//   const addTask = (title, assignedTo) => {\n//     const newTask = {\n//       id: Date.now(),\n//       title,\n//       assignedTo,\n//       stage: \"To Do\",\n//     };\n//     setTasks([...tasks, newTask]);\n//   };\n\n//   const editTask = (id, newTitle, newAssignedTo) => {\n//     setTasks(tasks.map(t =>\n//       t.id === id ? { ...t, title: newTitle, assignedTo: newAssignedTo } : t\n//     ));\n//   };\n\n//   const deleteTask = (id) => {\n//     setTasks(tasks.filter(t => t.id !== id));\n//   };\n\n//   const moveTask = (id, direction) => {\n//     setTasks(tasks.map(t => {\n//       if (t.id === id) {\n//         const currentIndex = stages.indexOf(t.stage);\n//         const newIndex = currentIndex + direction;\n//         if (newIndex >= 0 && newIndex < stages.length) {\n//           return { ...t, stage: stages[newIndex] };\n//         }\n//       }\n//       return t;\n//     }));\n//   };\n\n//   return (\n//     <div className=\"board\">\n//       {stages.map(stage => (\n//         <Column\n//           key={stage}\n//           stage={stage}\n//           tasks={tasks.filter(task => task.stage === stage)}\n//           onAdd={addTask}\n//           onEdit={editTask}\n//           onDelete={deleteTask}\n//           onMove={moveTask}\n//         />\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default TaskBoard;","map":{"version":3,"names":[],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/Taskboard.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import Column from \"./Column\";\r\n\r\n// const initialTasks = [];\r\n\r\n// const stages = [\"To Do\", \"In Progress\", \"Done\"];\r\n\r\n// function TaskBoard() {\r\n//   const [tasks, setTasks] = useState(initialTasks);\r\n\r\n//   const addTask = (title, assignedTo) => {\r\n//     const newTask = {\r\n//       id: Date.now(),\r\n//       title,\r\n//       assignedTo,\r\n//       stage: \"To Do\",\r\n//     };\r\n//     setTasks([...tasks, newTask]);\r\n//   };\r\n\r\n//   const editTask = (id, newTitle, newAssignedTo) => {\r\n//     setTasks(tasks.map(t =>\r\n//       t.id === id ? { ...t, title: newTitle, assignedTo: newAssignedTo } : t\r\n//     ));\r\n//   };\r\n\r\n//   const deleteTask = (id) => {\r\n//     setTasks(tasks.filter(t => t.id !== id));\r\n//   };\r\n\r\n//   const moveTask = (id, direction) => {\r\n//     setTasks(tasks.map(t => {\r\n//       if (t.id === id) {\r\n//         const currentIndex = stages.indexOf(t.stage);\r\n//         const newIndex = currentIndex + direction;\r\n//         if (newIndex >= 0 && newIndex < stages.length) {\r\n//           return { ...t, stage: stages[newIndex] };\r\n//         }\r\n//       }\r\n//       return t;\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"board\">\r\n//       {stages.map(stage => (\r\n//         <Column\r\n//           key={stage}\r\n//           stage={stage}\r\n//           tasks={tasks.filter(task => task.stage === stage)}\r\n//           onAdd={addTask}\r\n//           onEdit={editTask}\r\n//           onDelete={deleteTask}\r\n//           onMove={moveTask}\r\n//         />\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TaskBoard;\r\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARD BANK\\\\Documents\\\\ESHA FOLDER\\\\Hackathons\\\\Final Hackathon\\\\task-tracker\\\\src\\\\Taskcard.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// function TaskCard({ task, onEdit, onDelete, onMove }) {\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [title, setTitle] = useState(task.title);\n//   const [assignedTo, setAssignedTo] = useState(task.assignedTo);\n\n//   const saveEdit = () => {\n//     onEdit(task.id, title, assignedTo);\n//     setIsEditing(false);\n//   };\n\n//   return (\n//     <div className=\"task-card\">\n//       {isEditing ? (\n//         <>\n//           <input value={title} onChange={e => setTitle(e.target.value)} />\n//           <input value={assignedTo} onChange={e => setAssignedTo(e.target.value)} />\n//           <button onClick={saveEdit}>Save</button>\n//         </>\n//       ) : (\n//         <>\n//           <h4>{task.title}</h4>\n//           <p>Assigned to: {task.assignedTo || \"Unassigned\"}</p>\n//           <div className=\"actions\">\n//             <button onClick={() => setIsEditing(true)}>Edit</button>\n//             <button onClick={() => onDelete(task.id)}>Delete</button>\n//             <button onClick={() => onMove(task.id, -1)}>←</button>\n//             <button onClick={() => onMove(task.id, 1)}>→</button>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default TaskCard;\n\n// SOCOND CODE\n\n// import React, { useState } from 'react';\n\n// const TaskCard = ({ task, moveTask, deleteTask, editTask, assignPerson }) => {\n//   const [editing, setEditing] = useState(false);\n//   const [newTitle, setNewTitle] = useState(task.title);\n\n//   // Handle title edit\n//   const handleEditTitle = () => {\n//     editTask(task.id, newTitle);\n//     setEditing(false);  // Close edit mode\n//   };\n\n//   return (\n//     <div className=\"task-card\">\n//       <div>\n//         {/* If editing, show input box; otherwise, show task title */}\n//         {editing ? (\n//           <div>\n//             <input\n//               type=\"text\"\n//               value={newTitle}\n//               onChange={(e) => setNewTitle(e.target.value)}  // Handle title change\n//             />\n//             <button onClick={handleEditTitle}>Save</button>\n//           </div>\n//         ) : (\n//           <h3 onClick={() => setEditing(true)}>{task.title}</h3>\n//         )}\n//       </div>\n\n//       <div>\n//         <strong>Assigned to: </strong>\n//         <span>{task.assignedTo}</span>\n//         {/* Dropdown to assign person */}\n//         {/* <select \n//           onChange={(e) => assignPerson(task.id, e.target.value)} \n//           value={task.assignedTo}\n//         >\n//           <option value=\"Unassigned\">Unassigned</option>\n//           <option value=\"Alice\">Alice</option>\n//           <option value=\"Bob\">Bob</option>\n//           <option value=\"Charlie\">Charlie</option>\n//         </select> */}\n//       </div>\n\n//       <div className=\"task-actions\">\n//         {/* Move task buttons */}\n//         {task.stage !== 'To Do' && <button onClick={() => moveTask(task.id, 'To Do')}>To Do</button>}\n//         {task.stage !== 'In Progress' && <button onClick={() => moveTask(task.id, 'In Progress')}>In Progress</button>}\n//         {task.stage !== 'Done' && <button onClick={() => moveTask(task.id, 'Done')}>Done</button>}\n\n//         {/* Delete task */}\n//         <button onClick={() => deleteTask(task.id)}>Delete</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TaskCard;\n\n// THIRD CODE \nimport React, { useState } from 'react';\nimport './App.css';\nimport TaskCard from './TaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [taskInput, setTaskInput] = useState(''); // New task title input\n  const [assignedPerson, setAssignedPerson] = useState(''); // Person assigned to task\n\n  const people = ['Alice', 'Bob', 'Charlie'];\n\n  // Add a new task\n  const addTask = () => {\n    if (taskInput.trim() === '') return;\n    const newTask = {\n      id: Date.now(),\n      title: taskInput,\n      stage: 'To Do',\n      assignedTo: assignedPerson || 'Unassigned'\n    };\n    setTasks([...tasks, newTask]);\n    setTaskInput('');\n    setAssignedPerson('');\n  };\n\n  // Edit task title\n  const editTask = (taskId, newTitle) => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      title: newTitle\n    } : task));\n  };\n\n  // Assign person to task\n  const assignPerson = (taskId, person) => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      assignedTo: person\n    } : task));\n  };\n\n  // Move task to another stage\n  const moveTask = (taskId, newStage) => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      stage: newStage\n    } : task);\n    setTasks(updatedTasks);\n  };\n\n  // Delete a task\n  const deleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  // Group tasks by stage\n  const stages = ['To Do', 'In Progress', 'Done'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskInput,\n      onChange: e => setTaskInput(e.target.value) // New task input\n      ,\n      placeholder: \"New task...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: assignedPerson,\n      onChange: e => setAssignedPerson(e.target.value) // Assign person to task\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Assign to...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), people.map(person => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: person,\n        children: person\n      }, person, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: stages.map(stage => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: stage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), tasks.filter(task => task.stage === stage).map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          task: task,\n          moveTask: moveTask,\n          deleteTask: deleteTask,\n          editTask: editTask,\n          assignPerson: assignPerson\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this))]\n      }, stage, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ATmG3u+lhaSeJ7ywK1zF/B3F4wM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskCard","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","taskInput","setTaskInput","assignedPerson","setAssignedPerson","people","addTask","trim","newTask","id","Date","now","title","stage","assignedTo","editTask","taskId","newTitle","map","task","assignPerson","person","moveTask","newStage","updatedTasks","deleteTask","filter","stages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/Taskcard.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// function TaskCard({ task, onEdit, onDelete, onMove }) {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [title, setTitle] = useState(task.title);\r\n//   const [assignedTo, setAssignedTo] = useState(task.assignedTo);\r\n\r\n//   const saveEdit = () => {\r\n//     onEdit(task.id, title, assignedTo);\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"task-card\">\r\n//       {isEditing ? (\r\n//         <>\r\n//           <input value={title} onChange={e => setTitle(e.target.value)} />\r\n//           <input value={assignedTo} onChange={e => setAssignedTo(e.target.value)} />\r\n//           <button onClick={saveEdit}>Save</button>\r\n//         </>\r\n//       ) : (\r\n//         <>\r\n//           <h4>{task.title}</h4>\r\n//           <p>Assigned to: {task.assignedTo || \"Unassigned\"}</p>\r\n//           <div className=\"actions\">\r\n//             <button onClick={() => setIsEditing(true)}>Edit</button>\r\n//             <button onClick={() => onDelete(task.id)}>Delete</button>\r\n//             <button onClick={() => onMove(task.id, -1)}>←</button>\r\n//             <button onClick={() => onMove(task.id, 1)}>→</button>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TaskCard;\r\n\r\n  // SOCOND CODE\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const TaskCard = ({ task, moveTask, deleteTask, editTask, assignPerson }) => {\r\n//   const [editing, setEditing] = useState(false);\r\n//   const [newTitle, setNewTitle] = useState(task.title);\r\n\r\n//   // Handle title edit\r\n//   const handleEditTitle = () => {\r\n//     editTask(task.id, newTitle);\r\n//     setEditing(false);  // Close edit mode\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"task-card\">\r\n//       <div>\r\n//         {/* If editing, show input box; otherwise, show task title */}\r\n//         {editing ? (\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={newTitle}\r\n//               onChange={(e) => setNewTitle(e.target.value)}  // Handle title change\r\n//             />\r\n//             <button onClick={handleEditTitle}>Save</button>\r\n//           </div>\r\n//         ) : (\r\n//           <h3 onClick={() => setEditing(true)}>{task.title}</h3>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <strong>Assigned to: </strong>\r\n//         <span>{task.assignedTo}</span>\r\n//         {/* Dropdown to assign person */}\r\n//         {/* <select \r\n//           onChange={(e) => assignPerson(task.id, e.target.value)} \r\n//           value={task.assignedTo}\r\n//         >\r\n//           <option value=\"Unassigned\">Unassigned</option>\r\n//           <option value=\"Alice\">Alice</option>\r\n//           <option value=\"Bob\">Bob</option>\r\n//           <option value=\"Charlie\">Charlie</option>\r\n//         </select> */}\r\n//       </div>\r\n\r\n//       <div className=\"task-actions\">\r\n//         {/* Move task buttons */}\r\n//         {task.stage !== 'To Do' && <button onClick={() => moveTask(task.id, 'To Do')}>To Do</button>}\r\n//         {task.stage !== 'In Progress' && <button onClick={() => moveTask(task.id, 'In Progress')}>In Progress</button>}\r\n//         {task.stage !== 'Done' && <button onClick={() => moveTask(task.id, 'Done')}>Done</button>}\r\n\r\n//         {/* Delete task */}\r\n//         <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TaskCard;\r\n\r\n// THIRD CODE \r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport TaskCard from './TaskCard';\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskInput, setTaskInput] = useState('');  // New task title input\r\n  const [assignedPerson, setAssignedPerson] = useState('');  // Person assigned to task\r\n\r\n  const people = ['Alice', 'Bob', 'Charlie'];\r\n\r\n  // Add a new task\r\n  const addTask = () => {\r\n    if (taskInput.trim() === '') return;\r\n    const newTask = {\r\n      id: Date.now(),\r\n      title: taskInput,\r\n      stage: 'To Do',\r\n      assignedTo: assignedPerson || 'Unassigned',\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n    setTaskInput('');\r\n    setAssignedPerson('');\r\n  };\r\n\r\n  // Edit task title\r\n  const editTask = (taskId, newTitle) => {\r\n    setTasks(tasks.map(task => \r\n      task.id === taskId ? { ...task, title: newTitle } : task\r\n    ));\r\n  };\r\n\r\n  // Assign person to task\r\n  const assignPerson = (taskId, person) => {\r\n    setTasks(tasks.map(task => \r\n      task.id === taskId ? { ...task, assignedTo: person } : task\r\n    ));\r\n  };\r\n\r\n  // Move task to another stage\r\n  const moveTask = (taskId, newStage) => {\r\n    const updatedTasks = tasks.map(task =>\r\n      task.id === taskId ? { ...task, stage: newStage } : task\r\n    );\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  // Delete a task\r\n  const deleteTask = (taskId) => {\r\n    setTasks(tasks.filter(task => task.id !== taskId));\r\n  };\r\n\r\n  // Group tasks by stage\r\n  const stages = ['To Do', 'In Progress', 'Done'];\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Task Tracker</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={taskInput}\r\n        onChange={(e) => setTaskInput(e.target.value)}  // New task input\r\n        placeholder=\"New task...\"\r\n      />\r\n      <select\r\n        value={assignedPerson}\r\n        onChange={(e) => setAssignedPerson(e.target.value)}  // Assign person to task\r\n      >\r\n        <option value=\"\">Assign to...</option>\r\n        {people.map(person => (\r\n          <option key={person} value={person}>{person}</option>\r\n        ))}\r\n      </select>\r\n      <button onClick={addTask}>Add Task</button>\r\n\r\n      <div className=\"board\">\r\n        {stages.map(stage => (\r\n          <div key={stage} className=\"stage\">\r\n            <h2>{stage}</h2>\r\n            {tasks.filter(task => task.stage === stage).map(task => (\r\n              <TaskCard\r\n                key={task.id}\r\n                task={task}\r\n                moveTask={moveTask}\r\n                deleteTask={deleteTask}\r\n                editTask={editTask}\r\n                assignPerson={assignPerson}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARD BANK\\\\Documents\\\\ESHA FOLDER\\\\Hackathons\\\\Final Hackathon\\\\task-tracker\\\\src\\\\Taskboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Column from \"./Column\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = [];\nconst stages = [\"To Do\", \"In Progress\", \"Done\"];\nfunction TaskBoard() {\n  _s();\n  const [tasks, setTasks] = useState(initialTasks);\n  const addTask = (title, assignedTo) => {\n    const newTask = {\n      id: Date.now(),\n      title,\n      assignedTo,\n      stage: \"To Do\"\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const editTask = (id, newTitle, newAssignedTo) => {\n    setTasks(tasks.map(t => t.id === id ? {\n      ...t,\n      title: newTitle,\n      assignedTo: newAssignedTo\n    } : t));\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(t => t.id !== id));\n  };\n  const moveTask = (id, direction) => {\n    setTasks(tasks.map(t => {\n      if (t.id === id) {\n        const currentIndex = stages.indexOf(t.stage);\n        const newIndex = currentIndex + direction;\n        if (newIndex >= 0 && newIndex < stages.length) {\n          return {\n            ...t,\n            stage: stages[newIndex]\n          };\n        }\n      }\n      return t;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: stages.map(stage => /*#__PURE__*/_jsxDEV(Column, {\n      stage: stage,\n      tasks: tasks.filter(task => task.stage === stage),\n      onAdd: addTask,\n      onEdit: editTask,\n      onDelete: deleteTask,\n      onMove: moveTask\n    }, stage, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskBoard, \"SvIK8d5WT9y/c+LCOG3LNPDmSmQ=\");\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","useState","Column","jsxDEV","_jsxDEV","initialTasks","stages","TaskBoard","_s","tasks","setTasks","addTask","title","assignedTo","newTask","id","Date","now","stage","editTask","newTitle","newAssignedTo","map","t","deleteTask","filter","moveTask","direction","currentIndex","indexOf","newIndex","length","className","children","task","onAdd","onEdit","onDelete","onMove","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/Taskboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Column from \"./Column\";\r\n\r\nconst initialTasks = [];\r\n\r\nconst stages = [\"To Do\", \"In Progress\", \"Done\"];\r\n\r\nfunction TaskBoard() {\r\n  const [tasks, setTasks] = useState(initialTasks);\r\n\r\n  const addTask = (title, assignedTo) => {\r\n    const newTask = {\r\n      id: Date.now(),\r\n      title,\r\n      assignedTo,\r\n      stage: \"To Do\",\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  const editTask = (id, newTitle, newAssignedTo) => {\r\n    setTasks(tasks.map(t =>\r\n      t.id === id ? { ...t, title: newTitle, assignedTo: newAssignedTo } : t\r\n    ));\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter(t => t.id !== id));\r\n  };\r\n\r\n  const moveTask = (id, direction) => {\r\n    setTasks(tasks.map(t => {\r\n      if (t.id === id) {\r\n        const currentIndex = stages.indexOf(t.stage);\r\n        const newIndex = currentIndex + direction;\r\n        if (newIndex >= 0 && newIndex < stages.length) {\r\n          return { ...t, stage: stages[newIndex] };\r\n        }\r\n      }\r\n      return t;\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {stages.map(stage => (\r\n        <Column\r\n          key={stage}\r\n          stage={stage}\r\n          tasks={tasks.filter(task => task.stage === stage)}\r\n          onAdd={addTask}\r\n          onEdit={editTask}\r\n          onDelete={deleteTask}\r\n          onMove={moveTask}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskBoard;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,CAAC;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACI,YAAY,CAAC;EAEhD,MAAMM,OAAO,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;IACrC,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdL,KAAK;MACLC,UAAU;MACVK,KAAK,EAAE;IACT,CAAC;IACDR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEK,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMK,QAAQ,GAAGA,CAACJ,EAAE,EAAEK,QAAQ,EAAEC,aAAa,KAAK;IAChDX,QAAQ,CAACD,KAAK,CAACa,GAAG,CAACC,CAAC,IAClBA,CAAC,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,CAAC;MAAEX,KAAK,EAAEQ,QAAQ;MAAEP,UAAU,EAAEQ;IAAc,CAAC,GAAGE,CACvE,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,UAAU,GAAIT,EAAE,IAAK;IACzBL,QAAQ,CAACD,KAAK,CAACgB,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACR,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMW,QAAQ,GAAGA,CAACX,EAAE,EAAEY,SAAS,KAAK;IAClCjB,QAAQ,CAACD,KAAK,CAACa,GAAG,CAACC,CAAC,IAAI;MACtB,IAAIA,CAAC,CAACR,EAAE,KAAKA,EAAE,EAAE;QACf,MAAMa,YAAY,GAAGtB,MAAM,CAACuB,OAAO,CAACN,CAAC,CAACL,KAAK,CAAC;QAC5C,MAAMY,QAAQ,GAAGF,YAAY,GAAGD,SAAS;QACzC,IAAIG,QAAQ,IAAI,CAAC,IAAIA,QAAQ,GAAGxB,MAAM,CAACyB,MAAM,EAAE;UAC7C,OAAO;YAAE,GAAGR,CAAC;YAAEL,KAAK,EAAEZ,MAAM,CAACwB,QAAQ;UAAE,CAAC;QAC1C;MACF;MACA,OAAOP,CAAC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEnB,OAAA;IAAK4B,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnB3B,MAAM,CAACgB,GAAG,CAACJ,KAAK,iBACfd,OAAA,CAACF,MAAM;MAELgB,KAAK,EAAEA,KAAM;MACbT,KAAK,EAAEA,KAAK,CAACgB,MAAM,CAACS,IAAI,IAAIA,IAAI,CAAChB,KAAK,KAAKA,KAAK,CAAE;MAClDiB,KAAK,EAAExB,OAAQ;MACfyB,MAAM,EAAEjB,QAAS;MACjBkB,QAAQ,EAAEb,UAAW;MACrBc,MAAM,EAAEZ;IAAS,GANZR,KAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClC,EAAA,CAnDQD,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAqDlB,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
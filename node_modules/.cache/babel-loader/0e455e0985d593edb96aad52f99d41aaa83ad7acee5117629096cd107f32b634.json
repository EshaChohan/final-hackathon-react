{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARD BANK\\\\Documents\\\\ESHA FOLDER\\\\Hackathons\\\\Final Hackathon\\\\task-tracker\\\\src\\\\Column.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import TaskCard from \"./Taskcard\";\n\n// function Column({ stage, tasks, onAdd, onEdit, onDelete, onMove }) {\n//   const [title, setTitle] = useState(\"\");\n//   const [assignedTo, setAssignedTo] = useState(\"\");\n\n//   const handleAdd = () => {\n//     if (title.trim()) {\n//       onAdd(title, assignedTo);\n//       setTitle(\"\");\n//       setAssignedTo(\"\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"column\">\n//       <h2>{stage}</h2>\n//       {tasks.map(task => (\n//         <TaskCard\n//           key={task.id}\n//           task={task}\n//           onEdit={onEdit}\n//           onDelete={onDelete}\n//           onMove={onMove}\n//         />\n//       ))}\n//       {stage === \"To Do\" && (\n//         <div className=\"new-task\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Task title\"\n//             value={title}\n//             onChange={e => setTitle(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Assign to\"\n//             value={assignedTo}\n//             onChange={e => setAssignedTo(e.target.value)}\n//           />\n//           <button onClick={handleAdd}>Add Task</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Column;\n\nimport React, { useState } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport TaskCard from \"./TaskCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Column({\n  stage,\n  tasks,\n  addTask,\n  editTask,\n  deleteTask\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [assignedTo, setAssignedTo] = useState(\"\");\n  const handleAdd = () => {\n    if (title.trim()) {\n      addTask(title, assignedTo);\n      setTitle(\"\");\n      setAssignedTo(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: stage,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      ref: provided.innerRef,\n      ...provided.droppableProps,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: task,\n        index: index,\n        editTask: editTask,\n        deleteTask: deleteTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)), provided.placeholder, stage === \"To Do\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-task\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Task\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Assigned to\",\n          value: assignedTo,\n          onChange: e => setAssignedTo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAdd,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Column, \"9RvyRfD/eXYVUCxebJrj4orGVDs=\");\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useState","Droppable","TaskCard","jsxDEV","_jsxDEV","Column","stage","tasks","addTask","editTask","deleteTask","_s","title","setTitle","assignedTo","setAssignedTo","handleAdd","trim","droppableId","children","provided","className","ref","innerRef","droppableProps","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","id","placeholder","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/Column.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import TaskCard from \"./Taskcard\";\r\n\r\n// function Column({ stage, tasks, onAdd, onEdit, onDelete, onMove }) {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [assignedTo, setAssignedTo] = useState(\"\");\r\n\r\n//   const handleAdd = () => {\r\n//     if (title.trim()) {\r\n//       onAdd(title, assignedTo);\r\n//       setTitle(\"\");\r\n//       setAssignedTo(\"\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"column\">\r\n//       <h2>{stage}</h2>\r\n//       {tasks.map(task => (\r\n//         <TaskCard\r\n//           key={task.id}\r\n//           task={task}\r\n//           onEdit={onEdit}\r\n//           onDelete={onDelete}\r\n//           onMove={onMove}\r\n//         />\r\n//       ))}\r\n//       {stage === \"To Do\" && (\r\n//         <div className=\"new-task\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Task title\"\r\n//             value={title}\r\n//             onChange={e => setTitle(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Assign to\"\r\n//             value={assignedTo}\r\n//             onChange={e => setAssignedTo(e.target.value)}\r\n//           />\r\n//           <button onClick={handleAdd}>Add Task</button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Column;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport TaskCard from \"./TaskCard\";\r\n\r\nfunction Column({ stage, tasks, addTask, editTask, deleteTask }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [assignedTo, setAssignedTo] = useState(\"\");\r\n\r\n  const handleAdd = () => {\r\n    if (title.trim()) {\r\n      addTask(title, assignedTo);\r\n      setTitle(\"\");\r\n      setAssignedTo(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Droppable droppableId={stage}>\r\n      {provided => (\r\n        <div className=\"column\" ref={provided.innerRef} {...provided.droppableProps}>\r\n          <h2>{stage}</h2>\r\n          {tasks.map((task, index) => (\r\n            <TaskCard\r\n              key={task.id}\r\n              task={task}\r\n              index={index}\r\n              editTask={editTask}\r\n              deleteTask={deleteTask}\r\n            />\r\n          ))}\r\n          {provided.placeholder}\r\n\r\n          {stage === \"To Do\" && (\r\n            <div className=\"new-task\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Task\"\r\n                value={title}\r\n                onChange={e => setTitle(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Assigned to\"\r\n                value={assignedTo}\r\n                onChange={e => setAssignedTo(e.target.value)}\r\n              />\r\n              <button onClick={handleAdd}>Add Task</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n}\r\n\r\nexport default Column;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,MAAMA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMgB,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIJ,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE;MAChBT,OAAO,CAACI,KAAK,EAAEE,UAAU,CAAC;MAC1BD,QAAQ,CAAC,EAAE,CAAC;MACZE,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEX,OAAA,CAACH,SAAS;IAACiB,WAAW,EAAEZ,KAAM;IAAAa,QAAA,EAC3BC,QAAQ,iBACPhB,OAAA;MAAKiB,SAAS,EAAC,QAAQ;MAACC,GAAG,EAAEF,QAAQ,CAACG,QAAS;MAAA,GAAKH,QAAQ,CAACI,cAAc;MAAAL,QAAA,gBACzEf,OAAA;QAAAe,QAAA,EAAKb;MAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACfrB,KAAK,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB3B,OAAA,CAACF,QAAQ;QAEP4B,IAAI,EAAEA,IAAK;QACXC,KAAK,EAAEA,KAAM;QACbtB,QAAQ,EAAEA,QAAS;QACnBC,UAAU,EAAEA;MAAW,GAJlBoB,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACF,CAAC,EACDR,QAAQ,CAACa,WAAW,EAEpB3B,KAAK,KAAK,OAAO,iBAChBF,OAAA;QAAKiB,SAAS,EAAC,UAAU;QAAAF,QAAA,gBACvBf,OAAA;UACE8B,IAAI,EAAC,MAAM;UACXD,WAAW,EAAC,MAAM;UAClBE,KAAK,EAAEvB,KAAM;UACbwB,QAAQ,EAAEC,CAAC,IAAIxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACFxB,OAAA;UACE8B,IAAI,EAAC,MAAM;UACXD,WAAW,EAAC,aAAa;UACzBE,KAAK,EAAErB,UAAW;UAClBsB,QAAQ,EAAEC,CAAC,IAAItB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACFxB,OAAA;UAAQmC,OAAO,EAAEvB,SAAU;UAAAG,QAAA,EAAC;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB;AAACjB,EAAA,CAjDQN,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAmDf,eAAeA,MAAM;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
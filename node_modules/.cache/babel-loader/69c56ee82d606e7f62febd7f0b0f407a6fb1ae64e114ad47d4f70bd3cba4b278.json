{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARD BANK\\\\Documents\\\\ESHA FOLDER\\\\Hackathons\\\\Final Hackathon\\\\task-tracker\\\\src\\\\Column.js\";\n// import React, { useState } from \"react\";\n// import TaskCard from \"./Taskcard\";\n\n// function Column({ stage, tasks, onAdd, onEdit, onDelete, onMove }) {\n//   const [title, setTitle] = useState(\"\");\n//   const [assignedTo, setAssignedTo] = useState(\"\");\n\n//   const handleAdd = () => {\n//     if (title.trim()) {\n//       onAdd(title, assignedTo);\n//       setTitle(\"\");\n//       setAssignedTo(\"\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"column\">\n//       <h2>{stage}</h2>\n//       {tasks.map(task => (\n//         <TaskCard\n//           key={task.id}\n//           task={task}\n//           onEdit={onEdit}\n//           onDelete={onDelete}\n//           onMove={onMove}\n//         />\n//       ))}\n//       {stage === \"To Do\" && (\n//         <div className=\"new-task\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Task title\"\n//             value={title}\n//             onChange={e => setTitle(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Assign to\"\n//             value={assignedTo}\n//             onChange={e => setAssignedTo(e.target.value)}\n//           />\n//           <button onClick={handleAdd}>Add Task</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Column;\n\nimport React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport TaskCard from './Taskcard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Column({\n  stage,\n  tasks,\n  index\n}) {\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: stage,\n    type: \"task\",\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      ref: provided.innerRef,\n      ...provided.droppableProps,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: task,\n        index: index\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","Droppable","TaskCard","jsxDEV","_jsxDEV","Column","stage","tasks","index","droppableId","type","children","provided","className","ref","innerRef","droppableProps","fileName","_jsxFileName","lineNumber","columnNumber","map","task","id","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/Column.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import TaskCard from \"./Taskcard\";\r\n\r\n// function Column({ stage, tasks, onAdd, onEdit, onDelete, onMove }) {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [assignedTo, setAssignedTo] = useState(\"\");\r\n\r\n//   const handleAdd = () => {\r\n//     if (title.trim()) {\r\n//       onAdd(title, assignedTo);\r\n//       setTitle(\"\");\r\n//       setAssignedTo(\"\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"column\">\r\n//       <h2>{stage}</h2>\r\n//       {tasks.map(task => (\r\n//         <TaskCard\r\n//           key={task.id}\r\n//           task={task}\r\n//           onEdit={onEdit}\r\n//           onDelete={onDelete}\r\n//           onMove={onMove}\r\n//         />\r\n//       ))}\r\n//       {stage === \"To Do\" && (\r\n//         <div className=\"new-task\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Task title\"\r\n//             value={title}\r\n//             onChange={e => setTitle(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Assign to\"\r\n//             value={assignedTo}\r\n//             onChange={e => setAssignedTo(e.target.value)}\r\n//           />\r\n//           <button onClick={handleAdd}>Add Task</button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Column;\r\n\r\nimport React from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport TaskCard from './Taskcard';\r\n\r\nfunction Column({ stage, tasks, index }) {\r\n  return (\r\n    <Droppable droppableId={stage} type=\"task\">\r\n      {(provided) => (\r\n        <div\r\n          className=\"column\"\r\n          ref={provided.innerRef}\r\n          {...provided.droppableProps}\r\n        >\r\n          <h2>{stage}</h2>\r\n          {tasks.map((task, index) => (\r\n            <TaskCard key={task.id} task={task} index={index} />\r\n          ))}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n}\r\n\r\nexport default Column;\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,MAAMA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EACvC,oBACEJ,OAAA,CAACH,SAAS;IAACQ,WAAW,EAAEH,KAAM;IAACI,IAAI,EAAC,MAAM;IAAAC,QAAA,EACtCC,QAAQ,iBACRR,OAAA;MACES,SAAS,EAAC,QAAQ;MAClBC,GAAG,EAAEF,QAAQ,CAACG,QAAS;MAAA,GACnBH,QAAQ,CAACI,cAAc;MAAAL,QAAA,gBAE3BP,OAAA;QAAAO,QAAA,EAAKL;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACfb,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEd,KAAK,kBACrBJ,OAAA,CAACF,QAAQ;QAAeoB,IAAI,EAAEA,IAAK;QAACd,KAAK,EAAEA;MAAM,GAAlCc,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CACpD,CAAC,EACDR,QAAQ,CAACY,WAAW;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB;AAACK,EAAA,GAlBQpB,MAAM;AAoBf,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
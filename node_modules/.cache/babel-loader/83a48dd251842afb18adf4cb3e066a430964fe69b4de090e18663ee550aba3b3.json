{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARD BANK\\\\Documents\\\\ESHA FOLDER\\\\Hackathons\\\\Final Hackathon\\\\task-tracker\\\\src\\\\App.js\";\n// import React from \"react\";\n// import TaskBoard from \"./Taskboard\";\n// import \"./styles.css\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1>Task Tracker</h1>\n//       <TaskBoard />\n//     </div>\n//   );\n// }\n\n// export default App;\n// SECOND CODE\n\n// import React, { useState } from 'react';\n// import './App.css';\n// import TaskCard from './Taskcard';\n\n// const App = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [taskInput, setTaskInput] = useState('');  // Task input state\n//   const [assignedPerson, setAssignedPerson] = useState('');  // State to store person assigned to task\n\n//   const people = ['Alice', 'Bob', 'Charlie'];  // List of people to assign to tasks\n\n//   // Add a task\n//   const addTask = () => {\n//     if (taskInput.trim() === '') return;\n//     const newTask = {\n//       id: Date.now(),\n//       title: taskInput,\n//       stage: 'To Do',  // Default stage\n//       assignedTo: assignedPerson || 'Unassigned',  // Default assignment\n//     };\n//     setTasks([...tasks, newTask]);\n//     setTaskInput('');\n//     setAssignedPerson('');\n//   };\n\n//   // Edit a task's title\n//   const editTask = (taskId, newTitle) => {\n//     setTasks(tasks.map(task => \n//       task.id === taskId ? { ...task, title: newTitle } : task\n//     ));\n//   };\n\n//   // Assign person to task\n//   const assignPerson = (taskId, person) => {\n//     setTasks(tasks.map(task => \n//       task.id === taskId ? { ...task, assignedTo: person } : task\n//     ));\n//   };\n\n//   // Move task to another stage\n//   const moveTask = (taskId, newStage) => {\n//     const updatedTasks = tasks.map(task =>\n//       task.id === taskId ? { ...task, stage: newStage } : task\n//     );\n//     setTasks(updatedTasks);\n//   };\n\n//   // Delete a task\n//   const deleteTask = (taskId) => {\n//     setTasks(tasks.filter(task => task.id !== taskId));\n//   };\n\n//   // Group tasks by stage\n//   const stages = ['To Do', 'In Progress', 'Done'];\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Task Tracker</h1>\n//       <input\n//         type=\"text\"\n//         value={taskInput}\n//         onChange={(e) => setTaskInput(e.target.value)}  // Update task title input\n//         placeholder=\"New task...\"\n//       />\n//       {/* <select \n//         value={assignedPerson} \n//         onChange={(e) => setAssignedPerson(e.target.value)}  // Assign person to task\n//       >\n\n//         <option value=\"\">Assign to...</option>\n//         {people.map(person => (\n//           <option key={person} value={person}>{person}</option>\n//         ))}\n\n//       </select> */}\n\n// <input\n//         type=\"text\"\n//         value={assignedPerson}\n//         onChange={(e) => setAssignedPerson(e.target.value)}  // Update task title input\n//         placeholder=\"assigned...\"\n//       />\n//       <button onClick={addTask}>Add Task</button>\n\n//       <div className=\"board\">\n//         {stages.map(stage => (\n//           <div key={stage} className=\"stage\">\n//             <h2>{stage}</h2>\n//             {tasks.filter(task => task.stage === stage).map(task => (\n//               <TaskCard\n//                 key={task.id}\n//                 task={task}\n//                 moveTask={moveTask}\n//                 deleteTask={deleteTask}\n//                 editTask={editTask}\n//                 assignPerson={assignPerson}\n//               />\n//             ))}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// THIRD CODE\n//               import React, { useState } from 'react';\n// import './App.css';\n// import TaskCard from './Taskcard';\n\n// const App = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [taskInput, setTaskInput] = useState('');  // New task title input\n//   const [assignedPerson, setAssignedPerson] = useState('');  // Person assigned to task\n\n//   const people = ['Alice', 'Bob', 'Charlie'];\n\n//   // Add a new task\n//   const addTask = () => {\n//     if (taskInput.trim() === '') return;\n//     const newTask = {\n//       id: Date.now(),\n//       title: taskInput,\n//       stage: 'To Do',\n//       assignedTo: assignedPerson || 'Unassigned',\n//     };\n//     setTasks([...tasks, newTask]);\n//     setTaskInput('');\n//     setAssignedPerson('');\n//   };\n\n//   // Edit task title\n//   const editTask = (taskId, newTitle) => {\n//     setTasks(tasks.map(task => \n//       task.id === taskId ? { ...task, title: newTitle } : task\n//     ));\n//   };\n\n//   // Assign person to task\n//   const assignPerson = (taskId, person) => {\n//     setTasks(tasks.map(task => \n//       task.id === taskId ? { ...task, assignedTo: person } : task\n//     ));\n//   };\n\n//   // Move task to another stage\n//   const moveTask = (taskId, newStage) => {\n//     const updatedTasks = tasks.map(task =>\n//       task.id === taskId ? { ...task, stage: newStage } : task\n//     );\n//     setTasks(updatedTasks);\n//   };\n\n//   // Delete a task\n//   const deleteTask = (taskId) => {\n//     setTasks(tasks.filter(task => task.id !== taskId));\n//   };\n\n//   // Group tasks by stage\n//   const stages = ['To Do', 'In Progress', 'Done'];\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Task Tracker</h1>\n//       <input\n//         type=\"text\"\n//         value={taskInput}\n//         onChange={(e) => setTaskInput(e.target.value)}  // New task input\n//         placeholder=\"New task...\"\n//       />\n//       {/* <select\n//         value={assignedPerson}\n//         onChange={(e) => setAssignedPerson(e.target.value)}  // Assign person to task\n//       >\n//         <option value=\"\">Assign to...</option>\n//         {people.map(person => (\n//           <option key={person} value={person}>{person}</option>\n//         ))}\n//       </select> */}\n//       <input\n//         type=\"text\"\n//         value={assignedPerson}\n//         onChange={(e) => setAssignedPerson(e.target.value)}  // Update task title input\n//         placeholder=\"assigned...\"\n//       />\n//       <button onClick={addTask}>Add Task</button>\n\n//       <div className=\"board\">\n//         {stages.map(stage => (\n//           <div key={stage} className=\"stage\">\n//             <h2>{stage}</h2>\n//             {tasks.filter(task => task.stage === stage).map(task => (\n//               <TaskCard\n//                 key={task.id}\n//                 task={task}\n//                 moveTask={moveTask}\n//                 deleteTask={deleteTask}\n//                 editTask={editTask}\n//                 assignPerson={assignPerson}\n//               />\n//             ))}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport LogIn from \"./pages/login\";\nimport SignUp from \"./pages/signup\";\nimport Main from \"./pages/main\";\nimport taskTracker from \"./pages/tasktracker\";\n// import Sidebar  from \"./pages/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(LogIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"signup\",\n        element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"tasktracker\",\n        element: /*#__PURE__*/_jsxDEV(\"taskTracker\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"main\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","LogIn","SignUp","Main","taskTracker","jsxDEV","_jsxDEV","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HARD BANK/Documents/ESHA FOLDER/Hackathons/Final Hackathon/task-tracker/src/App.js"],"sourcesContent":["// import React from \"react\";\n// import TaskBoard from \"./Taskboard\";\n// import \"./styles.css\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1>Task Tracker</h1>\n//       <TaskBoard />\n//     </div>\n//   );\n// }\n\n// export default App;\n                // SECOND CODE\n\n// import React, { useState } from 'react';\n// import './App.css';\n// import TaskCard from './Taskcard';\n\n// const App = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [taskInput, setTaskInput] = useState('');  // Task input state\n//   const [assignedPerson, setAssignedPerson] = useState('');  // State to store person assigned to task\n\n//   const people = ['Alice', 'Bob', 'Charlie'];  // List of people to assign to tasks\n\n//   // Add a task\n//   const addTask = () => {\n//     if (taskInput.trim() === '') return;\n//     const newTask = {\n//       id: Date.now(),\n//       title: taskInput,\n//       stage: 'To Do',  // Default stage\n//       assignedTo: assignedPerson || 'Unassigned',  // Default assignment\n//     };\n//     setTasks([...tasks, newTask]);\n//     setTaskInput('');\n//     setAssignedPerson('');\n//   };\n\n//   // Edit a task's title\n//   const editTask = (taskId, newTitle) => {\n//     setTasks(tasks.map(task => \n//       task.id === taskId ? { ...task, title: newTitle } : task\n//     ));\n//   };\n\n//   // Assign person to task\n//   const assignPerson = (taskId, person) => {\n//     setTasks(tasks.map(task => \n//       task.id === taskId ? { ...task, assignedTo: person } : task\n//     ));\n//   };\n\n//   // Move task to another stage\n//   const moveTask = (taskId, newStage) => {\n//     const updatedTasks = tasks.map(task =>\n//       task.id === taskId ? { ...task, stage: newStage } : task\n//     );\n//     setTasks(updatedTasks);\n//   };\n\n//   // Delete a task\n//   const deleteTask = (taskId) => {\n//     setTasks(tasks.filter(task => task.id !== taskId));\n//   };\n\n//   // Group tasks by stage\n//   const stages = ['To Do', 'In Progress', 'Done'];\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Task Tracker</h1>\n//       <input\n//         type=\"text\"\n//         value={taskInput}\n//         onChange={(e) => setTaskInput(e.target.value)}  // Update task title input\n//         placeholder=\"New task...\"\n//       />\n//       {/* <select \n//         value={assignedPerson} \n//         onChange={(e) => setAssignedPerson(e.target.value)}  // Assign person to task\n//       >\n\n//         <option value=\"\">Assign to...</option>\n//         {people.map(person => (\n//           <option key={person} value={person}>{person}</option>\n//         ))}\n          \n//       </select> */}\n\n// <input\n//         type=\"text\"\n//         value={assignedPerson}\n//         onChange={(e) => setAssignedPerson(e.target.value)}  // Update task title input\n//         placeholder=\"assigned...\"\n//       />\n//       <button onClick={addTask}>Add Task</button>\n\n//       <div className=\"board\">\n//         {stages.map(stage => (\n//           <div key={stage} className=\"stage\">\n//             <h2>{stage}</h2>\n//             {tasks.filter(task => task.stage === stage).map(task => (\n//               <TaskCard\n//                 key={task.id}\n//                 task={task}\n//                 moveTask={moveTask}\n//                 deleteTask={deleteTask}\n//                 editTask={editTask}\n//                 assignPerson={assignPerson}\n//               />\n//             ))}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n              // THIRD CODE\n//               import React, { useState } from 'react';\n// import './App.css';\n// import TaskCard from './Taskcard';\n\n// const App = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [taskInput, setTaskInput] = useState('');  // New task title input\n//   const [assignedPerson, setAssignedPerson] = useState('');  // Person assigned to task\n\n//   const people = ['Alice', 'Bob', 'Charlie'];\n\n//   // Add a new task\n//   const addTask = () => {\n//     if (taskInput.trim() === '') return;\n//     const newTask = {\n//       id: Date.now(),\n//       title: taskInput,\n//       stage: 'To Do',\n//       assignedTo: assignedPerson || 'Unassigned',\n//     };\n//     setTasks([...tasks, newTask]);\n//     setTaskInput('');\n//     setAssignedPerson('');\n//   };\n\n//   // Edit task title\n//   const editTask = (taskId, newTitle) => {\n//     setTasks(tasks.map(task => \n//       task.id === taskId ? { ...task, title: newTitle } : task\n//     ));\n//   };\n\n//   // Assign person to task\n//   const assignPerson = (taskId, person) => {\n//     setTasks(tasks.map(task => \n//       task.id === taskId ? { ...task, assignedTo: person } : task\n//     ));\n//   };\n\n//   // Move task to another stage\n//   const moveTask = (taskId, newStage) => {\n//     const updatedTasks = tasks.map(task =>\n//       task.id === taskId ? { ...task, stage: newStage } : task\n//     );\n//     setTasks(updatedTasks);\n//   };\n\n//   // Delete a task\n//   const deleteTask = (taskId) => {\n//     setTasks(tasks.filter(task => task.id !== taskId));\n//   };\n\n//   // Group tasks by stage\n//   const stages = ['To Do', 'In Progress', 'Done'];\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Task Tracker</h1>\n//       <input\n//         type=\"text\"\n//         value={taskInput}\n//         onChange={(e) => setTaskInput(e.target.value)}  // New task input\n//         placeholder=\"New task...\"\n//       />\n//       {/* <select\n//         value={assignedPerson}\n//         onChange={(e) => setAssignedPerson(e.target.value)}  // Assign person to task\n//       >\n//         <option value=\"\">Assign to...</option>\n//         {people.map(person => (\n//           <option key={person} value={person}>{person}</option>\n//         ))}\n//       </select> */}\n//       <input\n//         type=\"text\"\n//         value={assignedPerson}\n//         onChange={(e) => setAssignedPerson(e.target.value)}  // Update task title input\n//         placeholder=\"assigned...\"\n//       />\n//       <button onClick={addTask}>Add Task</button>\n\n//       <div className=\"board\">\n//         {stages.map(stage => (\n//           <div key={stage} className=\"stage\">\n//             <h2>{stage}</h2>\n//             {tasks.filter(task => task.stage === stage).map(task => (\n//               <TaskCard\n//                 key={task.id}\n//                 task={task}\n//                 moveTask={moveTask}\n//                 deleteTask={deleteTask}\n//                 editTask={editTask}\n//                 assignPerson={assignPerson}\n//               />\n//             ))}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport LogIn from \"./pages/login\";\nimport SignUp from \"./pages/signup\";\nimport Main from \"./pages/main\";\nimport taskTracker from \"./pages/tasktracker\";\n// import Sidebar  from \"./pages/Sidebar\";\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n      <Route path=\"/\" element={<Main />}/>\n      {/* <Route path=\"attendance\" element={<Attendance/>}/> */}\n       <Route path=\"login\" element={<LogIn/>}/>\n        <Route path=\"signup\" element={<SignUp />}/>\n <Route path=\"tasktracker\" element={<taskTracker/>}/>\n        {/* <Route path='sidebar' element={<Sidebar/>}/> */}\n        <Route path=\"main\" element={<Main/>}/>\n      </Routes>\n    </BrowserRouter>\n);\n}"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAE/D,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,WAAW,MAAM,qBAAqB;AAC7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,oBACED,OAAA,CAACR,aAAa;IAAAU,QAAA,eACZF,OAAA,CAACP,MAAM;MAAAS,QAAA,gBACPF,OAAA,CAACN,KAAK;QAACS,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEJ,OAAA,CAACH,IAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEnCR,OAAA,CAACN,KAAK;QAACS,IAAI,EAAC,OAAO;QAACC,OAAO,eAAEJ,OAAA,CAACL,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvCR,OAAA,CAACN,KAAK;QAACS,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEJ,OAAA,CAACJ,MAAM;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClDR,OAAA,CAACN,KAAK;QAACS,IAAI,EAAC,aAAa;QAACC,OAAO,eAAEJ,OAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAE7CR,OAAA,CAACN,KAAK;QAACS,IAAI,EAAC,MAAM;QAACC,OAAO,eAAEJ,OAAA,CAACH,IAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACC,EAAA,GAduBR,GAAG;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}